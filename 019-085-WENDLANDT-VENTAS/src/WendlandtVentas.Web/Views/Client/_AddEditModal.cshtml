@model WendlandtVentas.Web.Models.ClientViewModels.ClientViewModel
<div class="modal-dialog" role="document">
    <form asp-action="@ViewData["Action"]" asp-antiforgery="true" class="modal-content forma-ajax--modal">
        <div class="modal-header">
            <h4 class="modal-title" id="addModal-label">@ViewData["ModalTitle"]</h4>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            @Html.HiddenFor(t => t.Id)
            <p class="text-muted">Campos marcados con asterisco son requeridos.</p>

            <div class="form-group">
                <label asp-for="Name"></label> <b class="text-danger">*</b>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Classification"></label>
                @Html.DropDownListFor(m => m.Classification, Model.Classifications, "Seleccionar clasificación", new { @class = "form-control" })
                <span asp-validation-for="Classification" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Channel"></label>
                @Html.DropDownListFor(m => m.Channel, Html.GetEnumSelectList<WendlandtVentas.Core.Entities.Enums.Channel>(), "Seleccionar canal", new { @class = "form-control", id = "Channel" })
                <span asp-validation-for="Channel" class="text-danger"></span>
            </div>

            <!-- Campo Descuento Distribuidor (similar al RFC con factura) -->
            <div class="form-group" id="descuentoDistribuidorGroup" style="display: none;">
                <label asp-for="DiscountPercentage">Descuento Distribuidor (%)</label> <b class="text-danger">*</b>
                <input asp-for="DiscountPercentage" class="form-control" type="number" step="0.01" min="0" max="100" />
                <span asp-validation-for="DiscountPercentage" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="StateId"></label>
                @Html.DropDownListFor(m => m.StateId, Model.States, "Seleccionar estado", new { @class = "form-control" })
                <span asp-validation-for="StateId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="PayType"></label>
                @Html.DropDownListFor(m => m.PayType, Model.PayTypes, "Seleccionar forma de pago", new { @class = "form-control" })
                <span asp-validation-for="PayType" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label>
                    <input asp-for="RequiereFactura" id="RequiereFactura" /> ¿Factura?
                </label>
            </div>

            <div class="form-group">
                <label asp-for="RFC"></label>
                <input asp-for="RFC" class="form-control" maxlength="13" />
                <span asp-validation-for="RFC" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="SellerId"></label>
                @Html.DropDownListFor(m => m.SellerId, Model.Sellers, new { @class = "form-control" })
                <span asp-validation-for="SellerId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="City"></label>
                <input asp-for="City" class="form-control" />
                <span asp-validation-for="City" class="text-danger"></span>
            </div>

            @if (User.IsInRole("Administrator") || User.IsInRole("AdministratorAssistant") || User.IsInRole("Billing"))
            {
                <div class="form-group">
                    <label asp-for="CreditDays"></label>
                    <input asp-for="CreditDays" class="form-control" min="0" />
                    <span asp-validation-for="CreditDays" class="text-danger"></span>
                </div>
            }

            <div class="modal-errores text-danger"></div>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
            <button type="submit" class="btn btn-primary">Guardar</button>
        </div>
    </form>
</div>

<script>
    $(document).ready(function () {
     

        // Función para mostrar/ocultar el campo RFC basado en el estado del checkbox
        function toggleRFCField() {
            if ($('#RequiereFactura').is(':checked') || $('#RFC').val().trim() !== "") {
                $('#RFC').closest('.form-group').show();
            } else {
                $('#RFC').closest('.form-group').hide();
            }
        }

        $('#RequiereFactura').change(function () {
            toggleRFCField();
        });

        toggleRFCField();

        // Verifica si RFC tiene valor y marca el checkbox de Factura
        function checkAndMarkFactura() {
            var rfc = $('#RFC').val();
            if (rfc && rfc.trim() !== "") {
                $('#RequiereFactura').prop('checked', true);
            }
        }

        checkAndMarkFactura();

            // Configuración basada en el enum Channel
        function toggleDiscountField() {
            var selectedChannel = $('#Channel').val(); // Obtiene el valor del dropdown

            if (selectedChannel === "2") { // "2" porque Distributor en el enum tiene el valor 2
                $('#descuentoDistribuidorGroup').show();
                $('#DiscountPercentage').prop('required', true);
            } else {
                $('#descuentoDistribuidorGroup').hide();
                $('#DiscountPercentage').prop('required', false);
                $('#DiscountPercentage').val(""); // Limpiar campo si no es distribuidor
            }
        }

        // Evento change para detectar cambios en el dropdown
        $('#Channel').change(function () {
            toggleDiscountField();
        });

        // Inicialización al cargar la página
        toggleDiscountField();
    });
</script>