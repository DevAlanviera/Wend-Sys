@model WendlandtVentas.Web.Models.OrderViewModels.OrderStatusViewModel
@using WendlandtVentas.Core.Entities.Enums

<div class="modal-dialog" role="document">
    <form asp-action="@ViewData["Action"]" asp-antiforgery="true" class="modal-content forma-ajax--modal">
        <div class="modal-header">
            <h4 class="modal-title" id="addModal-label">@ViewData["ModalTitle"]</h4>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            @Html.HiddenFor(c => c.OrderId)
            @Html.HiddenFor(c => c.Type)
            <div class="row mb-2  ml-1">
                <div class="col">
                    <div class="mb-2">
                        <div><label asp-for="Client.Name" class="form-label text-muted"></label></div>
                        <div><label class="font-weight-bold">@Model.Client.Name</label></div>
                    </div>
                    <div class="mb-2">
                        <div><label asp-for="Client.Channel" class="form-label text-muted"></label></div>
                        <div><label class="font-weight-bold">@Model.Client.Channel</label></div>
                    </div>
                    <div class="mb-2">
                        <div><label asp-for="Client.City" class="form-label text-muted"></label></div>
                        <div><label class="font-weight-bold">@Model.Client.City</label></div>
                    </div>
                    <div class="mb-2">
                        <div><label asp-for="Client.RFC" class="form-label text-muted"></label></div>
                        <div><label class="font-weight-bold">@Model.Client.RFC</label></div>
                    </div>
                    <div class="mb-2">
                        <div><label asp-for="Client.CreationDate" class="form-label text-muted"></label></div>
                        <div><label class="font-weight-bold">@Model.Client.CreationDate</label></div>
                    </div>
                </div>
                <div class="col">
                    <div class="mb-2">
                        <div><label asp-for="Client.Classification" class="form-label text-muted"></label></div>
                        <div><label class="font-weight-bold">@Model.Client.Classification</label></div>
                    </div>
                    <div class="mb-2">
                        <div><label asp-for="Client.PayType" class="text-muted"></label></div>
                        <div><label class="font-weight-bold">@Model.Client.PayType</label></div>
                    </div>
                    <div class="mb-2">
                        <div><label asp-for="Client.State" class="form-label text-muted"></label></div>
                        <div><label class="font-weight-bold">@Model.Client.State</label></div>
                    </div>
                </div>
            </div>
            <hr />
            <div class="form-row">
                <div class="col mb-3">
                    <label asp-for="Status"></label>
                    @Html.DropDownListFor(m => m.Status, Model.StatusList, "Seleccionar estado", new { @class = "form-control status-select", @style = "width:100%" })
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
                <div class="col mb-3" id="invoicecode" @(Model.Status == OrderStatus.OnRoute && Model.Type == OrderType.Invoice ? string.Empty : "hidden")>
                    <label asp-for="InvoiceCode"></label> <b class="text-danger">*</b>
                    <input asp-for="InvoiceCode" class="form-control" />
                    <span asp-validation-for="InvoiceCode" class="text-danger"></span>
                </div>


                <!--Campo para los status en proceso y en ruta-->
                <div class="form-group" id="realAmountGroup" @(Model.Status == OrderStatus.OnRoute || Model.Status == OrderStatus.InProcess ? "" : "hidden")>
                    <label asp-for="RealAmount"></label> <b class="text-danger">*</b>
                    <input asp-for="RealAmount" class="form-control" type="number" min="0" step="0.01" />
                    <span asp-validation-for="RealAmount" class="text-danger"></span>
                </div>

                <!--Checkbox para verificar si se requiere precio especial-->
                <div class="form-group" id="precioEspecialGroup" @(Model.Status == OrderStatus.OnRoute || Model.Status == OrderStatus.InProcess ? "" : "hidden")>
                    <label>
                        <input asp-for="PrecioEspecial" id="PrecioEspecial" /> ¿Precio Especial?
                    </label>
                </div>

                <div class="col mb-3" id="deliveryDay" @(Model.Status == OrderStatus.Delivered ? string.Empty : "hidden")>
                    <label asp-for="DeliveryDay"></label> <b class="text-danger">*</b>
                    <input asp-for="DeliveryDay" class="form-control date-picker" value="@Model.DeliveryDay" />
                    <span asp-validation-for="DeliveryDay" class="text-danger"></span>
                </div>
            </div>
            <!-- Agregamos el checkbox para agregar el descuento del 5% en el caso de que sea pago parcial-->
            <div class="form-group" id="prontoPago" hidden>
                <div class="form-check">
                    <input asp-for="IsProntoPago" class="form-check-input" id="prontoPagoCheckbox" />
                    <label class="form-check-label" for="prontoPagoCheckbox">Pronto Pago (5% de descuento)</label>
                </div>
            </div>

            <div class="form-group" id="initialAmount" hidden>
                <label asp-for="InitialAmount"></label>
                <input asp-for="InitialAmount" class="form-control" type="number" min="0" step="0.01" id="InitialAmount" />
                <span asp-validation-for="InitialAmount" class="text-danger"></span>
            </div>

            <div class="form-group" id="nuevoMonto" hidden>
                <label>Nuevo Monto (con descuento)</label>
                <input asp-for="NuevoTotal" class="form-control" readonly id="NuevoTotal" />
            </div>

            <div class="form-group">
                <label asp-for="Comments"></label>
                <textarea asp-for="Comments" maxlength="300" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Comments" class="text-danger"></span>
            </div>
            <div id="modal-warnings" class="modal-warnings alert alert-warning d-none" role="alert">
                Una vez hecho el pago parcial, solo un encargado de tesorería lo podrá modificar
            </div>
            <div class="modal-errores text-danger"></div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
            <button type="submit" class="btn btn-primary">Guardar</button>
        </div>
    </form>
</div>

<script>
    $(function () {
        // Inicialización del modal
        if ($("#Status").find('option:selected').text() == "Pago parcial") {
            $('#initialAmount').removeAttr('hidden');
            $('#prontoPago').removeAttr('hidden');
            $('#nuevoMonto').removeAttr('hidden');
        }

        if ($("#Status").find('option:selected').text() == "En ruta" || $("#Status").find('option:selected').text() == "En proceso") {
            $('#realAmountGroup').removeAttr('hidden');
            $('#precioEspecialGroup').removeAttr('hidden'); // Mostrar también al inicio si corresponde
        }

        // Inicializar el datepicker
        $(".date-picker").datepicker({
            autoclose: true,
            format: 'dd/mm/yyyy',
            theme: 'bootstrap4'
        });
    });

    // Manejar el cambio de estado
    $("#Status").on('change', function () {
        if ($(this).find('option:selected').text() == "En ruta" && $('#Type').val() == 'Invoice') {
            $('#invoicecode').removeAttr('hidden');
        } else {
            $('#invoicecode').attr('hidden', '');
        }

        if ($(this).find('option:selected').text() == "Pago parcial") {
            $('#initialAmount').removeAttr('hidden');
            $('#prontoPago').removeAttr('hidden');
            $('#nuevoMonto').removeAttr('hidden');
        } else {
            $('#initialAmount').attr('hidden', '');
            $('#prontoPago').attr('hidden', '');
            $('#nuevoMonto').attr('hidden', '');
        }

        if ($(this).find('option:selected').text() == "Entregado") {
            $('#deliveryDay').removeAttr('hidden');
        } else {
            $('#deliveryDay').attr('hidden', '');
        }

        if ($(this).find('option:selected').text() == "En ruta" || $(this).find('option:selected').text() == "En proceso") {
            $('#realAmountGroup').removeAttr('hidden');
            $('#precioEspecialGroup').removeAttr('hidden'); // <- Muestra el checkbox
        } else {
            $('#realAmountGroup').attr('hidden', '');
            $('#precioEspecialGroup').attr('hidden', ''); // <- Oculta el checkbox
        }

    });

    // Listener para el campo InitialAmount
    $('#InitialAmount').on('input', function () {
        aplicarDescuento();
    });

    // Listener para el checkbox de "Pronto Pago"
    $('#prontoPagoCheckbox').on('change', function () {
        aplicarDescuento();
    });

    // Función para aplicar el descuento
    function aplicarDescuento() {
        var montoIngresado = parseFloat($('#InitialAmount').val()) || 0; // Obtener el monto ingresado
        if ($('#prontoPagoCheckbox').is(':checked')) {
            var descuento = montoIngresado * 0.05; // 5% de descuento
            var montoConDescuento = montoIngresado - descuento;
            $('#NuevoTotal').val(montoConDescuento.toFixed(2));
        } else {
            $('#NuevoTotal').val(montoIngresado.toFixed(2));
        }
    }
    $('form').on('submit', function (e) {
        var estadoSeleccionado = $('#Status').find('option:selected').text();
        var realAmount = parseFloat($('#RealAmount').val());

        if ((estadoSeleccionado === "En ruta" || estadoSeleccionado === "En proceso") && (!realAmount || realAmount <= 0)) {
            e.preventDefault();
            $('#RealAmount').addClass('is-invalid');
            if ($('#RealAmount').next('.invalid-feedback').length === 0) {
                $('#RealAmount').after('<div class="invalid-feedback">Debes ingresar el monto real del pedido.</div>');
            }
            return false;
        } else {
            $('#RealAmount').removeClass('is-invalid');
            $('#RealAmount').next('.invalid-feedback').remove();
        }
    });

    function toggleMontoRealField() {
        if ($('#PrecioEspecial').is(':checked') || $('#RealAmount').val().trim() !== "") {
            $('#realAmountGroup').show(); // Mostrar el input de monto real
        } else {
            $('#realAmountGroup').hide(); // Ocultarlo si no aplica
        }
    }

    // Escuchar cambios en el checkbox "PrecioEspecial"
    $('#PrecioEspecial').change(function () {
        toggleMontoRealField();
    });

    // Ejecutar al cargar por si ya venía marcado o con valor
    toggleMontoRealField();

    // Si el campo ya tiene monto, marcar el checkbox automáticamente
    function checkAndMarkPrecioEspecial() {
        var monto = $('#RealAmount').val();
        if (monto && monto.trim() !== "") {
            $('#PrecioEspecial').prop('checked', true);
        }
    }

    checkAndMarkPrecioEspecial();
    
</script>